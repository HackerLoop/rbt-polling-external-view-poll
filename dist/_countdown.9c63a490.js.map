{"version":3,"sources":["_countdown.js"],"names":["Countdown","timer","end","onTick","onComplete","timeLeft","self","Date","timeAPI","tick","time","days","Math","floor","hours","minutes","seconds","clearInterval","interval","setInterval","call","abort","getTimeRemaining","module","exports"],"mappings":";AAEA,IAAIA,EAAY,aAEhBA,EAAUC,MAAQ,SAASC,EAAKC,EAAQC,GAClCC,IAoCQC,EApCRD,EAAWH,EAAM,IAAIK,KAErBC,EACI,MADJA,EAEK,KAFLA,EAGO,IAHPA,EAIO,IAGPC,EAAO,WACNJ,GAAAA,EAAW,EAAG,CACXK,IAAAA,EAAOL,EACPM,EAAOC,KAAKC,MAAMH,EAAQF,GAC9BE,GAAQF,EACJM,IAAAA,EAAQF,KAAKC,MAAMH,EAAQF,GAC/BE,GAAQF,EACJO,IAAAA,EAAUH,KAAKC,MAAMH,EAAQF,GACjCE,GAAQF,EACJQ,IAAAA,EAAUJ,KAAKC,MAAMH,EAAQF,GAQjCL,EANgB,CACdQ,KAAMA,EACNG,MAAOA,EACPC,QAASA,EACTC,QAASA,IAGXX,GAAY,SAEZA,GAAY,IACZY,cAAcC,GACdd,KAIAc,EAAWC,aACHb,EAIP,KAHM,WACLG,EAAKW,KAAKd,KAEJ,KAuBL,OAFPG,EAAKW,KAAK,MAEH,CACLC,MAAO,WACLJ,cAAcC,IAEhBI,iBAxBqB,WACfZ,IAAAA,EAAOL,EACPM,EAAOC,KAAKC,MAAMH,EAAOF,GAC7BE,GAAQF,EACJM,IAAAA,EAAQF,KAAKC,MAAMH,EAAOF,GAC9BE,GAAQF,EACJO,IAAAA,EAAUH,KAAKC,MAAMH,EAAOF,GAIzB,OAHPE,GAAQF,EAGD,CACLG,KAAMA,EACNG,MAAOA,EACPC,QAASA,EACTC,QANYJ,KAAKC,MAAMH,EAAOF,OAoBtCe,OAAOC,QAAUxB","file":"_countdown.9c63a490.js","sourceRoot":"..","sourcesContent":["\n\nvar Countdown = function(){}\n\nCountdown.timer = function(end, onTick, onComplete) {\n  var timeLeft = end - new Date();\n\n  var timeAPI = {\n    DAYS: 1000 * 60 * 60 * 24,\n    HOURS: 1000 * 60 * 60,\n    MINUTES: 1000 * 60,\n    SECONDS: 1000\n  }\n\n  var tick = function() {\n    if(timeLeft > 0) {\n      var time = timeLeft\n      var days = Math.floor(time / (timeAPI.DAYS))\n      time %= timeAPI.DAYS\n      var hours = Math.floor(time / (timeAPI.HOURS))\n      time %= timeAPI.HOURS\n      var minutes = Math.floor(time / (timeAPI.MINUTES))\n      time %= timeAPI.MINUTES\n      var seconds = Math.floor(time / (timeAPI.SECONDS))\n\n      var countdown = {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      }\n      onTick(countdown)\n      timeLeft -= 1000\n    }else {\n      timeLeft -= 1000\n      clearInterval(interval),\n      onComplete()\n    }\n  }\n\n  var interval = setInterval(\n    (function(self){\n      return function(){\n        tick.call(self)\n      }\n    })(this), 1000\n  )\n\n  var getTimeRemaining = function() {\n      var time = timeLeft\n      var days = Math.floor(time / timeAPI.DAYS)\n      time %= timeAPI.DAYS\n      var hours = Math.floor(time / timeAPI.HOURS)\n      time %= timeAPI.HOURS\n      var minutes = Math.floor(time / timeAPI.MINUTES)\n      time %= timeAPI.MINUTES\n      var seconds = Math.floor(time / timeAPI.SECONDS)\n\n      return {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      }\n    }\n\n  tick.call(this)\n\n  return {\n    abort: function() {\n      clearInterval(interval)\n    },\n    getTimeRemaining: getTimeRemaining\n  }\n}\n\nmodule.exports = Countdown"]}